---
analysis_manifest: .test_data/data/0.01xwgs_HG002.samplesheet.csv
unit_test: false
profile_name: local
valid_biome: AWSPC
genome_build: "hg38"  # or b37

 
#### Default Resources

___default___:
    resources:
        mem_mb: 10000000
        disk_mb: 10000000


# ###### Tool Selection CONFIG ----------------------------------------

# Thread scaling activated   ## DEPRECATED
dynamic_scaling: false
dynamic_scaling_factor: 1.0  # Takes the presets and scales them up/down based on this scaling factor.  WARNING-  you can choke your machine if not careful, go below 1 and you begin to request more theads than are detected.  This param can be set on the command line with --config dynamic_scaling_factor=1.5

# #### Select one to all of the available SNV callers
active_snv_callers:
    - deep
#    - clair3
#    - oct
#    - sentd

# #### Select one to all of the available SV callers
active_s_v_callers:
    - tiddit
    - manta
    - dysgu
#    - svaba

# #### Select one or all of the available mappers (all must use the same deduper for now! dppl or sent or bb2)
active_aligners:
    - bwa2a:
        mkdup: dppl
#    - sent:  # uncomment to run aligner (same deduper must be used presently in all aligner outputs, unless bundled into the align rule)
#        mkdup: dppl  # One ddup'r per analysis run.  dppl and sent currently are active
#    - strobe:
#        mkdup: dppl
#    - bwa2a:
#           mkdup: dppl
#    - bwa2b:
#          mkdup: dppl
#    - sent:
#          mkdup: dppl
#    - sent:
#          mkdup: dppl

# env JEMALLOC_CONF='oversize_threshold:1024,background_thread:true,huge:true,huge_page:1G,arena_max:4' LD_PRELOAD=resources/lib/libjemalloc.so.1

# env  MIMALLOC_RESERVE_HUGE_OS_PAGES=1 MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/lib/libmimalloc.so
#

# #######  FASTQ PREP

prep_input_sample_files:
    source_read_method: " ln -s  " # cp


# ###### RULE CONFIG ----------------------------------------

malloc_alt:
    ld_preload: "  "  # env LD_PRELOAD=./resources/libs/libllalloc.so  "

alignstats:
    threads: 8
    partition: "i64"
    num_reads_in_mem: " "  # 100000
    env_yaml: "../envs/alignstats_v0.2.yaml"
    glances: " "
    ld_preload: "  "  # env LD_PRELOAD=./resources/libs/libllalloc.so  "

bcftools_vcfstat:
    threads: 8


bcl2fq:
    bcl2fq_cmd:
        use_bases_mask: ' --use-bases-mask  y150n1,i8,i8,y150n1 '  # Set this wisely- heavily depends on the seq lib adpaters used ie: --use-bases-mask y150n1,i8,i8,y150n1  ##<----  !  remember to change this
        addl_flags: " --fastq-compression-level 1  --create-fastq-for-index-reads  --ignore-missing-bcls --adapter-stringency=0.9 --mask-short-adapter-reads 22  --minimum-trimmed-read-length 35 "
        barcode_mismatch: 0  # Tempting
        threads_loading: 96  # some low number around 15-20% of the processing threads
        threads_writing: 0  # <-- per docs, leave this set to zero.
        #-w [ --writing-threads ] arg (=4)               number of threads used for
        #                                          writing FASTQ data.
        #                                         This should not be set higher
        #                                         than the number of samples.
        #                                         If set =0 then these threads
        #                                         will be placed in the same
        #                                         pool as the loading threads,
        #                                         and the number of shared
        #                                         threads will be determined by
        #                                        --loading-threads.
        #to zero and all threads in loading are shared withwritingtjreads. Per docs, much more efficent.
        threads_processing: 180  #
        env_yaml: "../envs/bcl2fq_v0.2.yaml"
        b2fq_addl_flags: ''
        2fq_use_bases_mask: ''
    env_yaml: "../envs/bcl2fq_v0.2.yaml"
    threads: 8
    ex_uid: EX00000  # EX### you are working in
    have_you_double_checked_your_inputs_and_settings: true    # or yes - wil not proced w/this not set to true
    lanes: L001,L002,L003,L004  #ie L001 or L001,L002,L003  csv, no spaces please
    ru_path: "/fsx/"  #/lll/data
    ru_uid: RU0000  # The RU# for the data referenced above
    sample_sheet: config/bcl2fastq_samplesheet.csv  # save your sample sheet in this location with this name, or specify a new path. Former is encouraged.
    ld_preload: "  "    #  env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    b2fq_addl_flags: ''
    2fq_use_bases_mask: ''
    partition: "i64"

bcl2fq_by_lane:
    threads: 8
    partition: "i64"

bwa_mem2a_aln_sort:
    env_yaml: "../envs/bwasamtools_v0.1.yaml"
    partition: "i128"
    threads: 8
    bwa_threads: 8
    orig_threads: 2
    sort_threads: 4
    write_threads: 2
    ldpre: ""
    orig_sort_threads: 2
    benchmark_runs: 0
    softclip_alts: "  "
    ld_preload: "  "
    mem_mb: 200000 # This can be set to dynamically set based on fasta input size
    cmd: " OMP_NUM_THREADS=8 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE  resources/bwa-mem2/bwa-mem2 "  
    K: "  -k 19 -Y -M -K 100000 " 
    glances: " "
    k: " "
    orig_sort_mem: "50M"
    sort_thread_mem: "50M"  # 1350M
    numactl: ""
    mbuffer_mem: " | mbuffer -m 50M -q -s 128k " 
    igz_threads: " igzip -cd -T 2 "


strobe_align_sort:
    env_yaml: "../envs/strobe_aligner.yaml"
    partition: "i192"
    threads: 8
    strobe_threads: 8
    orig_threads: 8
    sort_threads: 8
    write_threads: 0
    igz_threads: 4
    ldpre: ""
    orig_sort_threads: 7
    benchmark_runs: 0
    softclip_alts: "  "
    ld_preload: "  "
    numa: " " # resources/numa/numactl --physcpubind=0-128 --membind=0-1   " 
    cmd: " OMP_NUM_THREADS=8 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE resources/strobealign/bin/strobealign "
    K: " "
    glances: " "
    k: " -k 19 -M -Y "
    orig_sort_mem: "50M"
    sort_thread_mem: "50M"  
    numactl: ""
    mem_mb: 200000 # This can be set to dynamically set based on fasta input size
    mbuffer_mem: " | mbuffer  -m 50M -q -s 128k " 
    igz_threads: " igzip -cd -T 2 "

clair3:
    threads: 8
    clair3_threads: 8
    partition: "i192,i128"
    partition_other: "i192,i128"
    mem_mb: 60000
    numa: " "  #OMP_NUM_THREADS=8 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE "
    clair3_chrms: "20,21"  # "3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y"

clean:
    env_yaml: "envs/vanilla_v0.1.yaml"  # no ./../ b/c it's being referenced from Snakefile
    partition: "i64"

deepvariant:
    threads: 8
    deep_threads: 8
    env_yaml: "../envs/deepvariant_v0.1.yaml"
    deep_cmd: " singularity run   -B /usr/bin:/usr/bin   -B ./resources:/fsx/resources -B /fsx:/fsx -B /tmp:/tmp   -B $PWD:$PWD  /fsx/resources/environments/containers/deepvariant-1.3.0.sif  OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE "
    ld_preload: " "  # env LD_PRELOAD=./resources/libs/libllalloc.so "  #3 "  "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "  # env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"
    partition_other: "i96,i192,i192"
    mem_mb: 60000
    deep_chrms: "20,21"
    numa: " OMP_NUM_THREADS=8 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE "

duphold:
    threads: 8
    env_yaml: "../envs/duphold_v0.1.yaml"
    numactl: ""
    ld_preload: "  "  # env LD_PRELOAD=./resources/libs/libllalloc.so "   # "  "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "  #  env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"

doppelmark:
    threads: 8
    partition: "i8"
    clip_padding: 600000
    mem_mb: 50000
    shard_size: 700000
    min_bases: 1000
    read_buffer_size: 50000
    queue_length: 640
    compress_threads: 8
    compress_mem: "100M"
    env_yaml: "../envs/vanilla_v0.1.yaml"
    numa: " OMP_NUM_THREADS=8 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE "
    mbuffer_mem: " | mbuffer -m 1G -q -s 128k "

dysgu:
    threads: 8
    env_yaml: "../envs/dysgu_sv_v0.2.yaml"
    min_sv_size: 30
    ld_preload: "  "  # ./resources/lib/libtcmalloc_and_profiler.so.4 "
    partition: "i64"

dysgu_sort_index:
    threads: 8
    partition: "i64"

fastp:
    threads: 8
    env_yaml: "../envs/fastp_v0.1.yaml"
    filter_avg_q_score: 9
    glances: " "  # glances --time 30 --stdout-csv now,cpu,diskio,mem,memswap,system,alert  "
    other_args: "  "
    ld_preload: "  "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "
    partition: "i64"

fastqc:
    threads: 8
    fastqc_threads: 8
    env_yaml: "../envs/fastqc_v0.1.yaml"
    extract: "  "
    ld_preload: " "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "
    partition: "i64"

fastv:
    threads: 8
    env_yaml: "../envs/fastv_v0.1.yaml"
    ld_preload: "  "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "
    partition: "i64"

go_left:
    env_yaml: "../envs/go_left_v0.1.yaml"
    threads: 8
    partition: "i64"

kat:
    threads: 8
    heap_size: "1G"
    benchmark_rounds: 0
    env_yaml: "../envs/kat_v0.1.yaml"
    glances: " "   # glances --time 30 --stdout-csv now,cpu,diskio,mem,memswap,system,alert  "
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

manta_sort_and_index:
    threads: 8
    partition: "i64"

manta:
    threads: 8
    env_yaml: "../envs/manta_v0.1.yaml"
    numactl: ""
    ld_preload: "  "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "   #  env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"

merge_bam:
    threads: 8
    smem: '3G'
    mmem: '3G'
    sthreads: 6
    mthreads: 6
    partition: 'i128'

mosdepth:
    threads: 8
    env_yaml: "../envs/mosdepth_v0.1.yaml"
    depth_bins: "0,1,3,5,10,15,20,30,40"
    partition: "i64"

duphold_sort_index:
    threads: 8
    partition: "i64"

tiddit_sort_index:
    threads: 8
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so "
    partition: "i64"


lofreq:
    threads: 8
    lofreq_threads: 8
    partition: "i192"
    partition_other: "i192"
    mem_mb: 85000 ## Potentially this can be dynmoic by input BAM size
    lofreq_chrms: "20,21"  # "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24"
    numa: " OMP_THREADS=64 OMP_PROC_BIND=close OMP_PLACES=threads OMP_PROC_BIND=TRUE OMP_DYNAMIC=TRUE OMP_MAX_ACTIVE_LEVELS=1 OMP_SCHEDULE=dynamic OMP_WAIT_POLICY=ACTIVE " 


multiqc:
    config_yaml:  "config/external_tools/multiqc.yaml"
    threads: 4
    lcwgs:
        config_yaml: "config/external_tools/multiqc_lcwgs_qc.yaml"
        env_yaml: "../envs/multiqc_v0.1.yaml"
    aln_qc:
        config_yaml: "config/external_tools/multiqc_align_cov_qc.yaml"
        env_yaml: "../envs/multiqc_v0.1.yaml"
    bcl2fq:
        config_yaml: "config/external_tools/multiqc_bcl2fq.yaml"
        env_yaml: "../envs/multiqc_v0.1.yaml"
    final:
        config_yaml: "config/external_tools/multiqc_final.yaml"
        env_yaml: "../envs/multiqc_v0.1.yaml"
    seqqc:
        config_yaml: "config/external_tools/multiqc_seqqc.yaml"
        env_yaml: "../envs/multiqc_v0.1.yaml"
    ld_preload: "  "  #env LD_PRELOAD=./resources/libs/libllalloc.so   "  #  env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "   # " env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"



octopus:
    regions_to_call: '  '  # testing:' --regions 11:1-115169878 MT:1-16569  '
    testing_model: '  '  #  ' --very-fast '  # set to ' --very-fast ' for testing
    #  threads: min_mem_mb
    testing_model: ' '  # set to ' --very-fast ' for testing
    threads: 8 # Dynamically reset- this represents the cap
    octo_chrms:  "20,21" 
    anno: " AD ADP AF AFB ARF BQ CRF DP FRF GC GQ MC MF MQ MQ0 QD GQD QUAL SB STRL STRP SMQ SB DC NC PP MP "
    cmd: " resources/octopus/octopus-skylakeavx512 "
    ld_pre: " "  # " env MIMALLOC_RESET_DELAY=750ms MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1 MIMALLOC_LARGE_OS_PAGES=1 MIMALLOC_USE_NUMA_NODES=2 MIMALLOC_RESERVE_HUGE_OS_PAGES=0   env LD_PRELOAD=$PWD/resources/libs/libmimalloc.so "
    brt: " --bad-region-tolerance NORMAL "
    err_model: "PCR-FREE.NOVASEQ"
    max_idel_err: " --max-indel-errors 37 "  # 36   ##  12 for test 36 prod
    max_haplotypes: " --max-haplotypes 360 "  # 350  ## 10 for test 300 prod
    env_yaml: "../envs/octopus_v0.7.yaml"
    oct_gather_env: "../envs/vanilla_v0.1.yaml"
    bench_repeat: 0
    glances: " "
    numactl: ""
    max_open_read_files_modifier: 10   # 250* this number
    target_working_memory: " "  # invalid option?--target-working-memory  155G "
    min_forest_quality: " --min-forest-quality 0 "
    max_reference_cache_footprint: " -X 1200M  "  #  dynamically set
    target_read_buffer_footprint: "   -B 120M  "  #  dynamically set
    addl_options: "  --max-variant-size 2000 --downsample-above 41 --downsample-target 41 --min-mapping-quality 6 --use-wide-hmm-scores  "  # --downsample-above 50 --downsample-target 50 --max-variant-size 2000 --min-mapping-quality 6 --use-wide-hmm-scores "   # --min-mapping-quality 6 --max-variant-size 50  --downsample-above 50 --downsample-target 50 "  #--max-variant-size 2000  --downsample-above 57 --downsample-target 56 --no-adapter-contaminated-reads  --ignore-unmapped-contigs  --mask-low-quality-tails 6 --mask-soft-clipped-boundary-bases 3  --mask-inverted-soft-clipping --mask-3prime-shifted-soft-clipped-heads --use-wide-hmm-scores --min-candidate-credible-vaf-probability 0.36 --allow-secondary-alignments --allow-supplementary-alignments --consider-unmapped-reads "  # from 0.35 bk is new  ## First set of options to explore:: --use-wide-hmm-scores --consider-unmapped-reads  "  ## --refcall BLOCKED --mask-low-quality-tails 5 --min-mapping-quality 8 --allow-secondary-alignments --min-supporting-reads 3 --max-variant-size 1500 --min-candidate-credible-vaf-probability 0.35"  # --max-read-length n --disable-read-preprocessing / --consider-unmapped-reads  --allow-supplementary-alignments  --downsample-target 100 --downsample-above 500  --num-fallback-kmers 20 --kmer-sizes 5 10 15 20 25 30 35 40 45 50       --fallback-kmer-gap 5  --max-region-to-assemble large value finds bigger events at loss of sens of smaller....   --assembler-mask-base-quality  --downsample-above 51 --downsample-target 50  #  --use-wide-hmm-scores --allow-supplementary-alignments --downsample-target 9 --downsample-above 10
    partition: "i64"
    

sentD:
    regions_to_call: '  '  # testing:' --regions 11:1-115169878 MT:1-16569  '
    testing_model: '  '  #  ' --very-fast '  # set to ' --very-fast ' for testing
    threads: 8 # Dynamically reset- this represents the cap
    sentD_chrms: "20,21-22"
    ld_preload: " "  # " env MIMALLOC_RESET_DELAY=750ms MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1 MIMALLOC_LARGE_OS_PAGES=1 MIMALLOC_USE_NUMA_NODES=2 MIMALLOC_RESERVE_HUGE_OS_PAGES=0   env LD_PRELOAD=$PWD/resources/libs/libmimalloc.so "
    env_yaml: "../envs/vanilla_v0.1.yaml"
    sentD_gather_env: "../envs/vanilla_v0.1.yaml"
    bench_repeat: 0
    numactl: " "
    partition: "i192"
    dna_scope_snv_model: "/fsx/data/tool_specific_resources/sentieon_models_2_2/sentieon_dnascope_snv_2_2.model"
    mem_mb: 200000

sort_index_sentD_chunk_vcf:
    threads: 8
    env_yaml: "../envs/vanilla_v0.1.yaml"
    partition: "i64"

concat_index_sentD_chunks:
    threads: 8
    env_yaml: "../envs/vanilla_v0.1.yaml"
    partition: "i64"

peddy:
    threads: 8
    env_yaml: "../envs/peddy_v0.1.yaml"
    glances: " "  # glances --time 30 --stdout-csv now,cpu,diskio,mem,memswap,system,alert "
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"


prep_for_concordance_check:
    threads: 2
    partition: "i64"

picard:
    threads: 8
    env_yaml: "../envs/picard_v0.1.yaml"
    partition: "i64"

qualimap:
    threads: 8
    java_mem_size: "50000M"
    env_yaml: "../envs/qualimap_v0.1.yaml"
    glances: " "  #glances --time 30 --stdout-csv now,cpu,diskio,mem,memswap,system,alert "
    numactl: ""
    partition: "i64"

rtg_vcfeval:
    threads: 8
    env_yaml: "../envs/rtgtools_v0.1.yaml"
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"
    partition_other: "i192,i192,i-96"

run_concordance:
    threads: 8
    env_yaml: "../envs/rtgtools_v0.1.yaml"
    partition: "i64"

sentieon_haplocaller:
    threads: 8
    partition: "i64"

rtg_vcfstats:
    threads: 8
    env_yaml: "../envs/rtgtools_v0.1.yaml"
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"
    partition_other: "i192,i192,i-96"

sambamba_markdups:
    threads: 8
    sort_buff_size: 1024
    io_buff_size: 1024
    overflow_list_si85ze: 8000
    benchmark_runs: 0
    ulimit: " ulimit -Sn 810000 "
    env_yaml: "../envs/sambamba_v0.1.yaml"
    partition: "i64,i96,i128"
    smem: "1G"

samtools_markdups:
    threads: 8
    ulimit: " ulimit -Sn 810000 "
    env_yaml: "../envs/samtools_v0.1.yaml"
    partition: "i64"

sentieon:
    threads: 8
    bwa_threads: 8
    benchmark_runs: 0
    max_mem: "50G"
    K: " -k 19 -Y -M -K 10000000  "
    env_yaml: "../envs/sentieon_v0.1.yaml"
    mask_regions: " "
    numactl: ""
    metrics_threads: 8
    ld_preload: "   "  #env LD_PRELOAD=./resources/libs/libllalloc.so "
    partition: "i96,i128"
    sort_thread_mem: "100M"
    sort_threads: 4
    mem_mb: 200000 
    write_threads: 4
    igz_threads:   " -cd -T 2 "
    mbuffer_mem: " -m 1G -q -s 128k "
    bwa_model: "/fsx/data/tool_specific_resources/sentieon_models_2_2/sentieon_bwa_2_2.model"


sentieon_markdups:
    threads: 8
    ulimit: " ulimit -Sn 810000 "
    env_yaml: "../envs/sentieon_v0.1.yaml"
    numactl: ""
    ld_preload: "  env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "
    partition: "i95,i128"

stargazer:
    threads: 8
    benchmark_runs: 0
    env_yaml: "../envs/stargazer_v0.1.yaml"
    partition: "i64"

tiddit:
    threads: 8
    min_sv_size: 10  # default is 100, min 10.
    env_yaml: "../envs/tiddit_v0.1.yaml"
    ld_preload: " " 
    partition: "i64"

vanilla:
    threads: 8
    env_yaml: "../envs/vanilla_v0.1.yaml"
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

verifybamid2_contam:
    env_yaml: "../envs/verifybamid2_v0.1.yaml"
    threads: 8
    ld_preload: "  env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

gen_samstats:
    threads: 8
    ld_preload: "   env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

sentieon_qc_metrics:
    threads: 8
    partition: "i64"

svaba:
    orig_threads: 8
    threads: 8
    ld_preload: " "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "   # " env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    cmd: " ./resources/svaba/svaba "
    partition: "i64"

svaba_sort_index:
    threads: 4
    ld_preload: "  "   # env LD_PRELOAD=./resources/libs/libllalloc.so   "  # env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "   # " env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"

calc_coverage_evenness:
    threads: 8
    ld_preload: " "  #  env LD_PRELOAD=resources/lib/libtcmalloc_and_profiler.so.4 "   # " env MIMALLOC_RESET_DELAY=1750ms MIMALLOC_PAGE_RESET=1 MIMALLOC_RESET_DECOMMITS=1  MI_OVERRIDE=ON MIMALLOC_ABANDONED_PAGE_RESET=1 MIMALLOC_SHOW_STATS=1  MIMALLOC_VERBOSE=1 MIMALLOC_SHOW_ERRORS=1   env LD_PRELOAD=resources/libs/libmimalloc-debug.so.1.7 "
    partition: "i64"

produce_fastqs_from_bams:
    threads: 4
    samtools_view_threads: 8
    partition: "i64"

svim_asm:
    threads: 8
    env_yaml: "../envs/svim_asm_v0.1.yaml"
    ld_preload: "  env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

hisat2:
    threads: 8
    env_yaml: "../envs/hisat2_v0.1.yaml"
    ld_preload: "  env LD_PRELOAD=./resources/libs/libllalloc.so "
    partition: "i28"
    sthreads: 2
    smem: "200M"
    wthreads: 4
    ldpre: " resources/numa/numactl --interleave all env LD_PRELOAD=resources/lib/libjemalloc.so.1 "

seqfu:
    threads: 8
    env_yaml: "../envs/fastqc_v0.1.yaml"
    ld_preload: "  env LD_PRELOAD=./resources/libs/libllalloc.so  "
    partition: "i64"

vep:
    threads: 8
    partition: "i64,i96"
     
