#!/usr/bin/env bash

export SNAKEMAKE_SINGULARITY_CMD="apptainer"


timestamp=$(date +%Y%m%d%H%M%S);

export TMPDIR=/fsx/scratch/day_run_$timestamp;
mkdir -p $TMPDIR;
export TMP=$TMPDIR
export TEMP=$TMPDIR

if [[ "$DAY_REMOTE_EXE" == "remote" ]]; then
    echo "Remote call detected. Activating conda hack"
    . "$HOME/miniconda3/etc/profile.d/conda.sh"
    export PATH="/home/ubuntu/miniconda3/bin:$PATH"
    conda activate DAY
fi

if [[ -z "$DAY_ROOT" || -z "$DAY_PROFILE" || -z "$DAY_PROFILE_DIR" ]]; then
    colr "ERROR: . dayiniy && day-activate [local|slurm] needs to have been run prior to day-run."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    exit 33
fi
if [[ ! -d "$DAY_PROFILE_DIR" ]]; then
    colr "ERROR: Profile directory: $DAY_PROFILE_DIR does not exist." "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    exit 3
fi

if [[ -z "$DAY_GENOME_BUILD" ]]; then
    colr "ERROR: Genome build not set. Please run 'dy-g [b37|hg38]'." "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    exit 3
fi

source bin/util/profile_freshness_warn.bash
if [[ "$?" == "3" ]]; then
    colr "ERROR: source bin/util/profile_freshness_warn.bash"  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    return 4
fi

# Check if we're in the correct root
if [[ "$(pwd)" != "$DAY_ROOT"* ]]; then
    colr "|||<<<
___________________

    You are not in the correct DAY_ROOT

    **>> DETECTED:     $PWD

    **>> EXPECTED:     $DAY_ROOT

    
___________________

    >>>|||" "$DY_ET0" "$DY_EB0" "$DY_ES1" 1>&2
    echo ""
    echo "Please run 'day-deactivate' and 'day-activate' from the intended analysis deployment directory."
    exit 3
fi



# Build the snakemake command
snakecmd_init=("snakemake" "--profile=$DAY_PROFILE_DIR" "$@")

snakecmd="${snakecmd_init[@]//\-\-keep-temp/\-\-notemp}"

# This ensures the snakedir is unlocked after a crash or successful exit 0
trap "(snakemake --unlock --profile $DAY_PROFILE_DIR  &>> ./unlock_fails.log & ) & " EXIT

# Log the command
cmd_log="$PWD/day_cmd.log"
cmddt=$(date --iso-8601="seconds")
echo "SMK> D:$cmddt / U:$USER / PWD:$PWD / CMD: (${snakecmd[*]})" >> "$cmd_log"

# Run snakemake command
colr "Executing: ${snakecmd[*]}"  "$DY_IT0" "$DY_IB0" "$DY_IS1"  1>&2
$snakecmd
ret_code=$?

colr "RETURN CODE: $ret_code" "$DY_IB0" "$DY_IT0" "$DY_IS0" 1>&2
exit $ret_code
