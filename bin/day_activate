#!/usr/bin/env bash
# This script is intended to be sourced, not executed directly.

dayp="$1"  # Profile code [loal|slurm]
gbuild="$2" # genome build code [hg38|b37]
echo "Requesting profile: $dayp"
DP=$DAY_PROJECT

if [[ -z "$dayp" ]]; then
    echo "ERROR: No profile specified, please specify [slurm|local] ([hg38|b37])"
    return 1
fi

# Attempt to deactivate any existing environment
source bin/day_deactivate &> /dev/null 
echo "Attempting to deactivate existing environments & re-init with --project $DP ."
. dyinit --project $DP --deactivate &> /dev/null
export DAY_PROFILE=$dayp

source ~/.bashrc


# Check if DAY_ROOT is set
if [[ -z "$DAY_ROOT" ]]; then
    echo "ERROR: DAY_ROOT is not set. Have you executed 'source dyinit'? Use -h for help."
    return 2
fi

# Handle help argument
if [[ "$1" =~ ^(-h|--help|help)$ ]]; then
    echo "Usage: day-activate [profile]"
    echo "This script activates a Daylily analysis profile."
    echo "Valid profiles are located in 'config/day_profiles/'."
    echo "Example: day-activate local"
    return 0
fi

export DAY_PROFILE_DIR="$DAY_ROOT/config/day_profiles/$DAY_PROFILE"
if [[ ! -d "$DAY_PROFILE_DIR" ]]; then
    colr "ERROR: Profile directory: $DAY_PROFILE_DIR does not exist." "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    echo "Have you run 'day-activate'?"
    return 3
fi
 
 . "/home/ubuntu/miniconda3/etc/profile.d/conda.sh"


conda activate DAY
conda_ret_code=$?
if [[ "$conda_ret_code" != "0" ]]; then
    colr "ERROR: conda activate DAY failed with return code $conda_ret_code."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    return 4
fi

source bin/util/profile_freshness_warn.bash
if [[ "$?" == "3" ]]; then
    colr "ERROR: source bin/util/profile_freshness_warn.bash"  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    return 4
fi


# Verify profile exists
profile_info="$DAY_ROOT/config/day_profiles/$1/templates/profile.info"
if [[ -f "$profile_info" ]]; then
    # Extract environment variables from profile.info
    env_val=$(grep 'env_var_val' "$profile_info" | cut -d ':' -f 2)
    if [[ "$env_val" != "$DAY_PROFILE" ]]; then
        colr "ERROR: Profile '$1' does not match the expected environment variable value."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
        return 1
    fi
    env_script=$(grep 'env_script' "$profile_info" | cut -d ':' -f 2)
    mgps1val=$(grep 'terminal_abbreviation' "$profile_info" | cut -d ':' -f 2)

    # Source the environment script
    source "$env_script"
    pe_ret_code=$?
    export DYPS1="$mgps1val"
else
    colr "ERROR: Profile '$1' not found."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    return 1
fi

# Check for 'colr' command
if ! command -v colr &> /dev/null; then
    colr "ERROR: 'colr' package is missing. Things will probably work, but not look fabulous."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    sleep 2
fi

# Check for errors during activation
if [[ "$pe_ret_code" != "0" ]]; then
    source bin/util/col_error.bash
    colr "ERROR: Activation failed with return code $pe_ret_code."  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    colr ""  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    colr  "Have you run 'day-build'? If so, try 'bin/day_deactivate reset; source dyinit; day-activate local;'"  "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
    return $pe_ret_code
else


    gbuild_ret_code=0
    if [[ "$gbuild" != "" ]]; then
        source bin/day_set_genome_build $gbuild
        gbuild_ret_code=$?
    else
        colr "Skipping genome build activation."  "$DY_WI1" "$DY_IB2" "$DY_IS1" 1>&2
    fi

    if [[ "$gbuild_ret_code" != "0" ]]; then
        colr  "ERROR:  dy-g $gbuild ($gbuild_ret_code)  failed." "$DY_WT0" "$DY_WB0" "$DY_WS1" 1>&2
        return 5
    fi
    colr "       _______ GREAT SUCCESS _______       " "$DY_IT0" "$DY_IB0" "$DY_IS1"
    export PS1="$DYPS1$PS1"
fi

return 0
