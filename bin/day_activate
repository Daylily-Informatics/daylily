#!/bin/bash

# Usage: ./qc_fastq_files_for_read_order_matching.sh <skip> <R1.fastq(.gz)> <R2.fastq(.gz)>

if [[ $# -lt 3 ]]; then
    echo "Usage: $0 <skip> <R1.fastq(.gz)> <R2.fastq(.gz)>"
    exit 1
fi

SKIP=$1
R1=$2
R2=$3

# Function to determine the appropriate reader (zcat or cat)
get_reader() {
    local file=$1
    if [[ "$file" == *.gz ]]; then
        echo "zcat"
    else
        echo "cat"
    fi
}

# Count reads using the appropriate reader and skipping logic
count_reads() {
    local file=$1
    local skip=$2
    local reader=$(get_reader "$file")

    # Use reader and awk to count reads
    $reader "$file" 2>/dev/null | awk -v skip="$skip" 'NR % (4 * skip) == 1' | wc -l
}

# Compare the two FASTQ files
compare_fastq_pair() {
    local r1=$1
    local r2=$2

    r1_count=$(count_reads "$r1" "$SKIP")
    r2_count=$(count_reads "$r2" "$SKIP")

    if [[ "$r1_count" -ne "$r2_count" ]]; then
        echo "❌ Mismatch: $r1 ($r1_count reads) and $r2 ($r2_count reads)"
        return 1
    else
        echo "✅ Paired correctly: $r1 and $r2 ($r1_count reads)"
        return 0
    fi
}

# Run the comparison
compare_fastq_pair "$R1" "$R2"

# Check if the comparison passed
if [[ $? -eq 0 ]]; then
    echo "🎉 All FASTQ pairs passed QC!"
else
    echo "⚠️ Some FASTQ pairs failed QC."
fi
